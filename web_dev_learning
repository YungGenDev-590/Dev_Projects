>>> Hospitality IT (OPERA & Simphony): <<<

================================================================================================================================================================================================================

Setting up OPERA on a workstation:

Accessing OPERA sites in MS Edge:

Make sure IE mode is enabled in MS Edge (Settings > Default browser > Allow IE mode (Restart browser))
When a link is opened for OPERA, click Run in IE mode to get a registered terminal (cannot log into OPERA without a registered terminal) - can add IE mode shortcut in Toolbar as well
OPERA sites can also be added manually as sites to run in IE mode (expires after 1 month)
Secondary option is to open the links using Internet Explorer, just make sure there are Trusted sites in Internet options > Security
Java is also necessary to run OPERA links, "exception.sites" file should be placed in [%USERPROFILE%\AppData\LocalLow\Sun\Java\Deployment\security]
TermReg.ini file should be found in [%USERPROFILE%\AppData\Local\] directory.

If all these requirements are met then users will be able to log into OPERA

For TSW make sure to run the page in IE mode and make sure to add the link to IE mode pages to fix the Silverlight issue

These steps were followed for users who were having an issue logging into OPERA as well as when a workstation was re-imaged and needed OPERA setup.

================================================================================================================================================================================================================

Creating a House Account in EMC based on a template of existing HA account:

EMC > select a property > Configuration > Sales > Tender / Media > select an existing item template > Ins. (Green Plus Sign) > choose a configuration

================================================================================================================================================================================================================

Unlocking / Terminating user account and / or resetting account password:

User Config > Users
Find user account and Edit / Unlock
Unlock account and type new password for user
Edit account to change password for user account or to Terminate a User

Before LDAP was implemented, most cases were related to resetting of passwords (a few instances of unlocking user accounts)

Now users can handle all password related issues by using a self-service password reset tool.

================================================================================================================================================================================================================

Pulling User Rights (UR) reports for User Activity Logs (UAL):

PMS > Reports > search "User" > select the "User Rights" report > OK > Filter (Users) > Users (drop-down) > All > Preview report & Save
PMS > User Activity Logs > Activity Group (Configuration) > change Activity Start & End Dates (first & last day of previous month) > Activity by (superusers from UR reports) > Search > Report > Preview & Save.

================================================================================================================================================================================================================

User cannot access OPERA module:

If a user cannot access a certain module (eg. SFA)
Check if the user has access to the module in their account
Then check CRO Access and if they have access then check in Property Access for missing access (i.e. SUNSFA)
Then ask user to log out and back in to check if they are able to access the module

================================================================================================================================================================================================================

User cannot see / print / preview reports in ORS:

Find the user account at the property, view their user permissions / user groups
Grant any necessary permissions for the user
Find their designated user group and edit the group, under Report Groups grant reports for the group
Ask user to log out and back in to check if they can see / print / preview reports

================================================================================================================================================================================================================

User cannot access certain items in PMS: (eg. Blocks, Billing, etc)

Find user account in Users
Grant required permissions and user should log and back in to see if issue has been resolved

Most cases were instances where users could not access or perform a certain task due to permissions that have been omitted from their user profile / group.

================================================================================================================================================================================================================

Understanding how permissions work in conjunction with other permissions:

Eg. BLOCKS and EVENTS / EVENT RESOURCE / EVENT SPACE permissions are examples of permissions that are dependant of each other

EVENT - refers to a specific event
EVENT RESOURCE - resources that are needed at an event
EVENT SPACE - refers to the event location

================================================================================================================================================================================================================

User cannot pull End of Day reports for a certain day:

The issue could be that the report does not exist in the location.
See if EOD reports can be pulled from your side and if not go to PMS > End of Day > End of Day Reports.
Find the specified report and click Recreate to regenerate the report.
Confirm with the user if they are able to print the report.

================================================================================================================================================================================================================

Checking a reservation on PMS (Check-Out Guest For End Of Day):

PMS > Reservation > Update Reservation

Checking out guest in PMS: (End of Day Check-In)

PMS > Front Desk > In-house Guests > then edit a guest profile by changing the Check-In / Check-Out Dates.

This process was done in SC UAT to allow End Of Day to run.

================================================================================================================================================================================================================

AR TYPEWRITER is a sensitive permission that requires manager confirmation before granting access to a user. AR TYPEWRITER allows a user to change amounts of revenue so therefore it is a sensitive permission.

================================================================================================================================================================================================================

Assigning a Cashier ID to a user's LDAP account:

Find the user in Users and copy their Cashier ID to their current LDAP account, if there is an error the user will need to close their cashiering on their old account before the new cashier ID can be allocated.

For certain properties, after LDAP went live, users encountered problems with Cashiering wherein they could not access Cashiering since no Cashier ID had been allocated to @CORP account. Assigning the Cashier ID from their old 99 account resolved these issues.

================================================================================================================================================================================================================

Scheduling downtime reports to a specific location on D:\ drive on application servers:

RDC to a server > File Explorer > D:\MICROS\opera\export\OPERA\DownTimeReports

^^ Scheduling downtime reports to this location

Open Task Scheduler in RDC and Import a task and confirm details.

Log into OPERA > PMS > Misc > Report Scheduler
New > Search "downtime" (If No Downtime Report Already Exists) > Select a downtime report from the list > Change repetition frequency to be run hourly (every 4 hours) > Save

Downtime Reports are scheduled to run in case of the system going down at the Unit, in which case the reports will allow procedures to run on premises. e.g. Check-In Guests, etc.

================================================================================================================================================================================================================

Configuring Interfaces:

User Configuration > Property Interfaces > Interface Configuration > Select Property (If Multi-Property) > Select An Interface > Select "Class Of Service"
Under "Name display format" select a "Standard format" e.g. Appellation Lastname > Check the tickbox of "User defined format" > Select a format and then choose a "Format expression table" > Add / Remove items from the columns and Save

================================================================================================================================================================================================================

PMS > Update Reservation > Search > Select a Reservation > Options > Confirmation
Under the "Confirmation Name" column > drop-down arrow > select a letter type (sometimes "proforma" is needed) > preview report to see if details populate the report

Save changes

================================================================================================================================================================================================================

Assigning Report Groups and Transaction Codes for user groups:

Config > Setup > User Groups > Search For A User Group > Edit > Transaction Codes > tick Transactions box > All > Add > Save
Config > Setup > User Groups > Search For A User Group > Edit > Report Groups > Add All Groups > Save

Users who are allocated to that User Group will have access to preview and print Reports as well as view Transaction Codes

This process resolved multiple issues for users who were not able to view reports.

================================================================================================================================================================================================================

Assigning Printer Tasks to a workstation to alter a deposit / payment:

Config > Workstations > Select A Workstation > Printer Tasks > New > Select a printer from Printer drop-down > select a task from Printer Tasks > Save all changes

Check what permissions are needed for the user to post a payment. E.g., CASHIERING > DEPOSIT AMOUNT OVERRIDE

The user should be able to alter the deposit.

In this case, the user encountered this problem on their workstation and these steps resolved the problem they had.

================================================================================================================================================================================================================

Adding employees to Simphony by copying an exisiting template: (Simphony)

EMC > Employee Maintenance > Search All Or Individual User > Select User Account > Click On "Ins. (Green Plus Sign)" > Task To Perform: "Add Employee Record From Template" > Fill In Details > OK
After Employees Have Been Added > Open Each User Profile > "General" Tab > Add A Username & Password (That Will Be Changed Upon First Login)
Next Will Be The "Reporting" Tab > Set User As "Active" > Fill In "Display Name" > Select "Role / Time Zone / Org Level" [Org Level --> Sun International Group]

Password change prompt only appears when logging into EMC, not R&A.
The user has to log into EMC to get the password change prompt, once the password is changed they will be able to log into Micros R&A.

 // -- "Check Name" & "Display Name" Are The User's Full Name

================================================================================================================================================================================================================

With regards to LDAP (Lightweight Directory Access Protocol) 
> creation of User Groups 
> Assigning Permissions and Cashier ID's 
> assisting users' with login issues 
> reviewing of permissions that users' had before 
> terminating old user accounts prefixed with 99. 
This project helped give insight into how OEPRA ORS & PMS works and what users can do on the system based on the group they belong to, as well as having permissions assigned that is consistent since they are granted to User Groups specifically, instead of inconsistently granting permissions per user.


BLOCK SHIFT & MOVE RESERVATION are granted when a user cannot shift / move reservation dates in Blocks.

================================================================================================================================================================================================================

Granting external vendors access to the Jumpbox using Bomgar

Open the support portal in a browser (https://support.micros.co.za)

Enter the session key provided by the vendor, it will download a session
Open the download file (session) and grant permission to the vendor (elevate if need be)
RDC to the requested server, open the OPERA application for the server
The remote vendor should be able to log into OPERA to perform the necessary tasks.

================================================================================================================================================================================================================

CMD:

To get detailed information on the network configuration use the command "ipconfig".

========= C:\Users\chuet>ipconfig

Ping a server/website if you want to find out what the IP address for a particular server/website (since a website is hosted on a server)

========= C:\Users\chuet>ping "serverName/webpageURL"

|=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=/=\=|

>>> Technology Solutions (Web Development) <<<

================================================================================================================================================================================================================

Printers
--------

Open Run (Ctrl + R)
Enter "\\vr-rv-ric-ap01"

================================================================================================================================================================================================================

IDE : Integrated Development Environment
CLI : Command Line Interface
ERP : Enterprise Resource Planning
DNS : Domain Name Service - this allows users to access a resource using a domain name (a domain name is a more efficient method instead of using an IP address)
CRM : Customer/Client Relationship Management
VM : Virtual Machine - a virtual machine runs virtual software and multiple VM's can be hosted on one physical server/machine. a VM runs it's own OS and has the same functionality as a normal PC.

================================================================================================================================================================================================================

SSMS : SQL Server Management Studio
-----------------------------------

Connect to local DB in SSMS (upon first install and setup)

Server type : Database Engine
Server name : (LocalDB)\MSSQLLocalDB
Authentication : Windows Authentication

================================================================================================================================================================================================================

HTML (Hypertext Markup Language) :
----------------------------------

HTML basics such tags and how a webpage is structured.
Adding styling through inline style tags or through a styling section within HTML documents.
Adding JavaScript scripts through button onclick behaviours or through script section within HTML documents.
Linking of external CSS stylesheets and JS script files.

================================================================================================================================================================================================================

CSS (Cascading Style Sheets) :
------------------------------

Styling webpage elements through referencing HTML element classes or ID's (for individual item styling) or whole HTML elements that applies styling to specific HTML properties.
Applying styling to an element upon an action with the cursor such as hover / click
Rendering and transitioning animations upon an action with the cursor, such as hover
Resizing and alignment of webpage elements according to declared CSS properties and values.

================================================================================================================================================================================================================

JS (JavaScript) :
-----------------

Creating action behaviour for certain HTML elements (such as buttons and images) to display a modal, etc.
Declaration of variables (var / let / const) to allow certain actions to take place such as display a modal upon clicking a button / image.
Types of values that can be used when declaring a variable (string / integer(number) / boolean / objects / arrays / undefined etc)
Creating functions that execute code using the parameters given as values, and the different types of functions that can be used
Objects, arrays, loops, if statements, 
Module scripts for importing and exporting variables and functions to/from external JS files.
Referencing element classes to override HTML with "innerHTML" and "querySelector()" libraries.
"querySelectorAll()" is used with "forEach()" to create a function that runs for each element that is referenced with "querySelectorAll"

================================================================================================================================================================================================================

4me:
-----

Broadcast
Self-Service Page Design (monthly changes)
UI extensions
Workflows
Request templates
Automation Rules

================================================================================================================================================================================================================

Umbraco CMS (Content Management System):
----------------------------------------

Creating a blank document templates with compositions, permissions, etc.
Allowing the template to be created under "Content > home" by adding the template as a "child node type" on the "Settings > home" template
Creating a new page template on the Content tab to populate page content based on each composition and publishing each page so it displays on the website
Nesting templates under the home page Navigation Menu

================================================================================================================================================================================================================

GitHub / Azure DevOps (Version Control System):
------------------------------------------------

> Initiating / Creating a Project Repo (Repository)
> Cloning a repo to local machine via DevOps / Git
> Push / Pull / Fetch files from Repo to Local Machine
> Creating Sub Sub-Branches based on a common Sub-Branch
> Using Command Line to Commit / Push / Fetch / Delete / Checkout Branch, etc.
> Creating Pull requests after code changes have been pushed into a sub branch
> Merging approved changes into development branch to initiate a solution build and thereafter deploy into Staging / Dev Environment

> CI : continued integration
> CD : continued development
> CI/CD pipelines are automated processes and procedures that are ongoing to allow publishing/deploying to designated environments as well as testing.

Git Bash (Git for Windows):
---------------------------

Update Git using this command : git update-git-for-windows
Check git version : git --version

================================================================================================================================================================================================================

Umbraco / Azure DevOps deployment pipeline
------------------------------------------

-> Changes are made on the local dev environment.
-> Push changes to the DevOps repo on a sub-branch based on a development branch (e.g. development).
-> Create a pull request (PR) for code to be reviewed and approved/denied.
-> Once the pull request has been approved, an automatic build will take place in the designated configured pipeline (e.g. Staging/Development).
-> Once the build has succeeded it will be releaseed into the designated deployment environment for testing before deploying to the Prod environment.

Applying changes into Repo and deploy into Staging:
---------------------------------------------------

-> Apply changes to necessary files
-> Stage the applicable files (with contained changes) and then Commit changes to local machine.
-> Checkout to development branch and pull latest changes to get the latest commit.
-> Change back to your sub branch and then push changes into Repo - into your sub branch (sub branch is based off development branch)
-> Do a pull request (PR) in Git (Azure DevOps / GitHub) to merge the changes from your sub branch into the development branch

PR:
Make sure your sub branch is being merged into development specifically (NOT MAIN)
Add required title and description as per your changes, add required reviewers if required

Once pull request is approved the files will be deployed into the pipeline which will automatically trigger a build of the solution / repo files and thereafter deployed into Staging / Dev environments

================================================================================================================================================================================================================

Get changes into relevant files.

If Umbraco changes: Put changes into .cshtml

Else If CSS changes put changes into .scss file and transpile to to css by running command "npm run sass-dev" in Sun.Cms solution folder
 
2. Stage your changes on local branch through Git. (On VSCode or VS the git tab on the side - stage all the relevant files with changes)
3. Commit your changes on local branch, using a descriptive message of your changes
4. Once done with all changes, you change branches to "developement" and pull latest changes.
5. Change back to your branch and merge "development" into your branch.
6. Push your branch onto Git and open a Pull Request (PR) onto "development"
7. Make changes if uinstructed or if code is approved, then merge changes onto "development"

================================================================================================================================================================================================================

Steps to run the commands in Sun.Cms:

>> N.B!: install Node.js before running any of these commands or they will result in an error

1. First run "cd Sun.Cms" to change the current directory to Sun.Cms project folder (this is so the below commands can be run successfully!)
2. Then run "npm install" to install the necessary packages from Node.js into the current working directory (in this case it is Sun.Cms)
3. Finally run the command "npm run sass-dev" to watch for any new changes made to scss and then run the command again to transpile/compile the changed [.scss] file changes into the respective [.css] and [.css.map] files, before pushing changes into the repo and making a pull request.

================================================================================================================================================================================================================

>>> Bootstrap: <<< Preconfigured styling language and templates

https://getbootstrap.com/docs/

CDN (Content Delivery Network) links for inserting Bootstrap into HTML
As reference, here are our primary CDN links.

Description	URL
CSS	> https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css
JS	> https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js
You can also use the CDN to fetch any of our additional builds listed in the Contents page.



--> Install via package manager <--
Install Bootstrap’s source Sass and JavaScript files via npm, RubyGems, Composer, or Meteor. Package managed installs don’t include documentation or our full build scripts. You can also use any demo from our Examples repo to quickly jumpstart Bootstrap projects.


npm install bootstrap@5.3.2

gem install bootstrap -v 5.3.2


--> Include via CDN <--
When you only need to include Bootstrap’s compiled CSS or JS, you can use jsDelivr. See it in action with our simple quick start, or browse the examples to jumpstart your next project. You can also choose to include Popper and our JS separately.

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>

--> Udemy AppBrewery links: <--
https://appbrewery.github.io/flex-layout/
https://appbrewery.github.io/bootstrap-layout/
https://appbrewery.github.io/bootstrap-components

--> Bootstrap div exercises: <--
https://getbootstrap.com/docs/5.3/layout/breakpoints/

  <!-- Modify the HTML code for the purple boxes below so it behaves like the green ones. -->
  <div class="row">
    <div class="col-xl-6 col-sm-12">50% desktop, 100% mobile</div>
    <div class="col-xl-6 col-sm-12">50% desktop, 100% mobile</div>
  </div>
  
  <!-- Modify the HTML below to make the blue boxes behave like the red ones. -->
  <div class="row">
    <div class="col-xl-6 col-lg-6 col-md-12 col-sm-12 col-10">Column 1</div>
    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 col-10">Column 2</div>
    <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 col-10">Column 3</div>
  </div>
  
  <!-- Modify the HTML below to make the indigo boxes behave like the blue ones. -->
  <div class="row">
	<div class="col-xxl-1 col-xl-2 col-lg-4 col-md-6">Column 1</div>
	<div class="col-xxl-11 col-xl-10 col-lg-8 col-md-6">Column 2</div>
  </div>
  
Bootstrap dark mode:

Add [ data-bs-theme="dark" ] attribute to an HTML element and the specific element will change the theme to dark mode.
Alternatively adding [ data-bs-theme="light" ] will make the element use the ligt theme.

================================================================================================================================================================================================================

UI Extensions & Self-Service Design

UI Extensions - HTML & JS (CSS optional)

creating a routine for an efficient workflow

working closely with Sean on ongoing and upcoming projects, also working with new tech gear in recent tech advancements
brainstorming for innovative ideas/technologies (such as AI) for implementation in the hospitality industry / IT department

IT floor:
=========

> === Upskill to better handle projects from an internal perspective (such as with the current AEM project)
> === Assist other internal departments in IT with any ongoing projects as well
> === Key point from Friday's meeting: get involved with as many areas in IT as possible. Understanding Azure, Access Control, Infrastructure, etc.
> === Work with Enock and Ntshebeng to understand how everything in SI integrates with other departments.
> === Work on understanding devops and azure
> === Work with Nhlanhla (NM) to assist with the solutions architecture within central office to cover as much of the scope as possible alongside obtaining the IT certs applicable to the space I work in.

================================================================================================================================================================================================================

C#:
----

Basic syntax
Varbiable types (strings, int, bool, )
User input Console.ReadLine();
Math
Loops
Arrays

Methods
Objects

================================================================================================================================================================================================================

CoSec link: http://vr-si-cos-ap01/

================================================================================================================================================================================================================

Making styling changes to the Sun.Cms solution:

IMPORTANT NOTE: ======== Install Node.js before attempting run any of the below commands or else they will result in an error.

1. === Open solution on local
2. === Open terminal (make sure Node.js is installed)
3. === Run command(s):
4. === cd Sun.Cms ============== This changes the current active working directory to Sun.Cms
5. === npm install ============= This will install the node package from node package manager (npm)
6. === npm run sass-dev ======== This command should be run after changing the current directory (cd) to Sun.Cms [cd Sun.Cms]
7. === Once [npm run sass-dev] has been run in the current working directory, it monitors and watches for any changes changes made to .scss files will compile the relevant .css and .css.map files accordingly.
8. === To stop compiling changes use the keyboard shortcut Ctrl+C
9. === To monitor new changes, the sass-dev command will have to be run again.

================================================================================================================================================================================================================

Azure pull requests and working with Fork repo/branch manager:
--------------------------------------------------------------

Fixing merge conflicts that occur when creating a pull request:
---------------------------------------------------------------
01. === Instead of using Visual Studio to resolve merge conflicts, use [ Fork (a merge conflict viewer) ] as well as [ KDiff3  (merge conflict editor software) ]
02. === Fork syncs any Git changes that you make in VS including which branch you have checked into and all the latest changes that have been made for that particular branch as well.
03. === The changes that have been done to files will show up under Local Changes. Checkout into your local sub branch and do a fetch and pull from development, bring all changes from development over to sub branch,
 ====== any merge conflict files that show up will be placed in Local Changes and some changes will be staged and unstaged, merge conflicts will appear in Unstaged, their file icon will appear as a yellow warning triangle 
04. === Make sure to configure external editor as KDiff3 (naviagate to File > Preferences > Integration tab > change Merge Tool to KDiff3 > change External Diff Tool to KDiff3 > Close)
05. === Edit these files in Fork one by one by opening with an external editor.
06. === Click each file an select "Merge with external editor" > This will open KDiff3
 ====== NOTE: make sure to open every conflict file even if there is a message saying the file can be staged. In KDiff3 the "number of unresolved conflicts" will indicate how many conflicts there are.
07. === In KDiff3 there are buttons on the toolbar, the three downward facing triangles naviagte to the next unresolved conflict, select C to apply the changes to C block of window (the local version of the file)
08. === For .css.map files make sure to change line format from Conflict to DOS and then save the changes in the file. For regular .scss and .css files it is straightforward injecting the code change into C block and Save.
09. === Once the conflicts have been resolved it will create a file with the same filename with .orig (original) at below the changed file. You should stage the resolved conflict file (won't have .orig extension).
10. === When all the files have no remaining conflicts, stage all the other files that remain in Unstaged because these are files that need to be updated on your sub branch.
11. === Commit and Push all staged files into your sub branch. This has now resolved all merge conflicts and if you refresh the PR page there will be no conflicts displayed.

Fix for warning message on your PR:
-----------------------------------
12. If there is a warning message that shows up on the pull request you made, you need to fetch and pull the latest changes from the HEAD branch (such as "development").
13. Checkout your sub branch and bring over any new changes, then merge "development" into your sub branch, keep setting as "Default --fast forward if possible".
14. The "Default" option will automatically create a commit on your sub branch, all that is left to do is to push the local changes into your PR/sub branch (have your branch open and select "Push"). Refresh the pull request.

The above steps are a way to make sure that all your branch files are in sync with the connected branch it's based on. Therefore any changes made in development will need to pulled from that branch and merged into your branch making sure all files are the same.

================================================================================================================================================================================================================

LG SuperSign signage CMS

Use of a separate SSID to create an instance of the signage application on a VM as it will be easier to manage instead of a local machine

> In the editor, you can split a screen into multiple screens based on templates
> You can stored media or external media via an external source through a display cable
> RSS feeds can also be used, mentioned that it can be quite popular
> BGM - background music can also be applied
> The editor can also save all edited config as a project, multiple projects can be saved and stored under Content
> Signage projects can also be played as a playlist in any order
> Forecast/scheduling can also be done to allow signage to commence at a certain time or day
> Everything can also be exported to an external device or transferred so that it eliminates the whole process of recreating the project(s)
> Distributuon is also an option in multiple forms, including sending a broadcast of information, as well as multiple channels. all using signage displays
> Media can also be configured as a user needs it to be, such as setting the volume of media to play
> Multi control allows selecting multiple signage screens and adjusting how the screen performs such as brightness and also controlling the screen remotely such as switching on/off.
> A single screen can also be controlled and configured as well. such as firmware updates and also clearing of memory data/cache. you are also able to view information for a single screen such as software version, model name, IP address, etc.
> Splitting a screen is whereby you can display multiple media on a single screen, even on a video wall (which uses multiple mounted screens as a wall). video wall can be confiured as desired.
> In the players tab, users can be created and permissions can be assigned as needed (mainly for media and content employees to access the signage system) - 'players' refers to a signage screen. 100 players = 100 screens
> Internet breakout is whereby a TV accesses the internet to access certain platforms (such as YT) and browsing the web.
> Supersign master is the ability of a central signage system to have control or push content down to other supersign signage devices/systems.
> The software can be installed on our local systems without a display

DHCP : Dynamic Host Configuration Protocol - Is a client/server protocol that provides an automatic IP host with its IP address and other configuration information
SSID : Service Set Identifier - The name assigned to a router when wifi is set up.
VLAN : Virtual Local Area Network - A virtualized connection that connects multiple devices and network nodes from different LAN's into one logical network.
Subnet : Sub Network - a network inside a network, more efficient since network traffic travels shorter distances
Subnet mask : 
Default gateway : 

================================================================================================================================================================================================================

Solutions Architect

EA : Enterprise Architecture - documentation wtih a wholistic view of how the architecture is set up in all aspects (this gives a high level overview of the architeture of the company/business)
NA : Network Architecture - documentation of how the network configuration communicates with other networks
CA : Cloud Architecture
AA : Application Architecture
SA : System Architecture

SOAP : Simple Object Access Protocol
REST : Representational State Transfer
SFTP : Secure File Transfer Protocol
WSDL : Web Service Description Language
YAML : YAML Ain't Markup Language
OBE : Outcome-Based Education
ETL : Extract-Transform-Load

Artifacts:
----------
Artifacts are a visual representation of how systems integrate/flow with other systems - this is usually displayed in the form of a diagram (i.e. an architecture diagram)

Architecture domains:
--------------------
Business domain : business needs to document the necessary requirements needed for processes and procedures that are to be into place.
Application domain : users in this domain are responsible for reserving and providing resources to host an application that could be public facing or internal in the business.
Database domain : people responsible for the database should provide the resources needed to store information within database tables which would likely be located on a server.
Infrastructure domain : people responsible for providing the network configuration to allow everything to connect and follow the necessary procedures.

Architecture model:
------------------
Application
Logic / Business Rules
Database
Infrastructure
Security protocol(s)

================================================================================================================================================================================================================

CEH (Certified Ethical Hacking)
-------------------------------

Black-hat hackers:
Malicious hackers that use hacking attacks for illegal purposes such as information harvesting, controlling systems, etc.

White-hat hackers:
Ethical hackers who have permission to hack systems with no malicious intent, these hackers are mainly hired to do pentests the security of systems (known as pentesters - penetration testers)

Grey-hat hackers:
A combination of black-hat and white-hat hackers whereby that attacks are illegal but they do not perform illegal tasks once systems are attacked.


================================================================================================================================================================================================================

Service Desk:

Reimage a device

Connect the device to a working LAN cable
Boot up and spam F12 to enter the system BIOS
Select the IPv4 image protocol
In the dialog box, select Windows 11 23H2 Enterprise OS edition
Enter the universal IT admin password
Change the value for the host/device name to HO[tag number]
Let the installation process run and once done install the necessary drivers
For HP open the browser and search for HP image assistant
Install needed drivers and imaging process is complete
Once drivers are installed, log in with user credentials and install Office, OPERA, Chrome. Set up Oulook and Teams (after device restart).

================================================================================================================================================================================================================

Clone to local machine
Make changes, stage the changes, commit and push the changes to Git (DevOps) on your sub branch
Create a pull request to merge your changes with the development branch (once approved)
An automatic build of the staging and development environments will commence
For dev/stg environments the releases are triggered to automatically be deployed to STG/DEV, however for the PROD environments the releases are manual and have to be created and thereafter each deployment has to be manually triggered for deployment.

================================================================================================================================================================================================================

Node.js:
--------

Enter the node REPL (Read Evaluate Print Loop) by typing "node" (not as a string) in the terminal

===== Press Tab twice to bring up a list of global Node variables =====
PS C:\Source\Repos\complete-node-bootcamp-master> node
Welcome to Node.js v22.3.0.
Type ".help" for more information.

===== > /* use the below REPL command to bring up a list of global Node variables */ =====

>
AbortController                   AbortSignal                       AggregateError                    Array                             ArrayBuffer
Atomics                           BigInt                            BigInt64Array                     BigUint64Array                    Blob
Boolean                           BroadcastChannel                  Buffer                            ByteLengthQueuingStrategy         CompressionStream
CountQueuingStrategy              Crypto                            CryptoKey                         CustomEvent                       DOMException
DataView                          Date                              DecompressionStream               Error                             EvalError
Event                             EventTarget                       File                              FinalizationRegistry              Float32Array
Float64Array                      FormData                          Function                          Headers                           Infinity
Int16Array                        Int32Array                        Int8Array                         Intl                              Iterator
JSON                              Map                               Math                              MessageChannel                    MessageEvent
MessagePort                       NaN                               Navigator                         Number                            Object
Performance                       PerformanceEntry                  PerformanceMark                   PerformanceMeasure                PerformanceObserver
PerformanceObserverEntryList      PerformanceResourceTiming         Promise                           Proxy                             RangeError
ReadableByteStreamController      ReadableStream                    ReadableStreamBYOBReader          ReadableStreamBYOBRequest         ReadableStreamDefaultController
ReadableStreamDefaultReader       ReferenceError                    Reflect                           RegExp                            Request
Response                          Set                               SharedArrayBuffer                 String                            SubtleCrypto
Symbol                            SyntaxError                       TextDecoder                       TextDecoderStream                 TextEncoder
TextEncoderStream                 TransformStream                   TransformStreamDefaultController  TypeError                         URIError
URL                               URLSearchParams                   Uint16Array                       Uint32Array                       Uint8Array
Uint8ClampedArray                 WeakMap                           WeakRef                           WeakSet                           WebAssembly
WebSocket                         WritableStream                    WritableStreamDefaultController   WritableStreamDefaultWriter       _
_error                            assert                            async_hooks                       atob                              btoa
buffer                            child_process                     clearImmediate                    clearInterval                     clearTimeout
cluster                           console                           constants                         crypto                            decodeURI
decodeURIComponent                dgram                             diagnostics_channel               dns                               domain
encodeURI                         encodeURIComponent                escape                            eval                              events
fetch                             fs                                global                            globalThis                        http
http2                             https                             inspector                         isFinite                          isNaN
module                            navigator                         net                               os                                parseFloat
parseInt                          path                              perf_hooks                        performance                       process
punycode                          querystring                       queueMicrotask                    readline                          repl
require                           setImmediate                      setInterval                       setTimeout                        stream
string_decoder                    structuredClone                   sys                               timers                            tls
trace_events                      tty                               undefined                         unescape                          url
util                              v8                                vm                                wasi                              worker_threads
zlib

__proto__                         hasOwnProperty                    isPrototypeOf                     propertyIsEnumerable              toLocaleString
toString                          valueOf

constructor

===== > /* use the below REPL command to bring up a list of properties that can be used with the "String" command */ =====

> String.
String.__proto__             String.hasOwnProperty        String.isPrototypeOf         String.propertyIsEnumerable  String.toLocaleString        String.valueOf

String.apply                 String.arguments             String.bind                  String.call                  String.caller                String.constructor
String.toString

String.fromCharCode          String.fromCodePoint         String.length                String.name                  String.prototype             String.raw

> String.

===== > /* use the below REPL command to bring up a list of properties that can be used with the "String" command */ =====

> Number.
Number.__proto__             Number.hasOwnProperty        Number.isPrototypeOf         Number.propertyIsEnumerable  Number.toLocaleString        Number.valueOf

Number.apply                 Number.arguments             Number.bind                  Number.call                  Number.caller                Number.constructor
Number.toString

Number.EPSILON               Number.MAX_SAFE_INTEGER      Number.MAX_VALUE             Number.MIN_SAFE_INTEGER      Number.MIN_VALUE             Number.NEGATIVE_INFINITY
Number.NaN                   Number.POSITIVE_INFINITY     Number.isFinite              Number.isInteger             Number.isNaN                 Number.isSafeInteger
Number.length                Number.name                  Number.parseFloat            Number.parseInt              Number.prototype

> Number.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

PS C:\Source\Repos\complete-node-bootcamp-master> node
Welcome to Node.js v22.3.0.
Type ".help" for more information.
>
AbortController                   AbortSignal                       AggregateError                    Array                             ArrayBuffer
Atomics                           BigInt                            BigInt64Array                     BigUint64Array                    Blob
Boolean                           BroadcastChannel                  Buffer                            ByteLengthQueuingStrategy         CompressionStream
CountQueuingStrategy              Crypto                            CryptoKey                         CustomEvent                       DOMException
DataView                          Date                              DecompressionStream               Error                             EvalError
Event                             EventTarget                       File                              FinalizationRegistry              Float32Array
Float64Array                      FormData                          Function                          Headers                           Infinity
Int16Array                        Int32Array                        Int8Array                         Intl                              Iterator
JSON                              Map                               Math                              MessageChannel                    MessageEvent
MessagePort                       NaN                               Navigator                         Number                            Object
Performance                       PerformanceEntry                  PerformanceMark                   PerformanceMeasure                PerformanceObserver
PerformanceObserverEntryList      PerformanceResourceTiming         Promise                           Proxy                             RangeError
ReadableByteStreamController      ReadableStream                    ReadableStreamBYOBReader          ReadableStreamBYOBRequest         ReadableStreamDefaultController
ReadableStreamDefaultReader       ReferenceError                    Reflect                           RegExp                            Request
Response                          Set                               SharedArrayBuffer                 String                            SubtleCrypto
Symbol                            SyntaxError                       TextDecoder                       TextDecoderStream                 TextEncoder
TextEncoderStream                 TransformStream                   TransformStreamDefaultController  TypeError                         URIError
URL                               URLSearchParams                   Uint16Array                       Uint32Array                       Uint8Array
Uint8ClampedArray                 WeakMap                           WeakRef                           WeakSet                           WebAssembly
WebSocket                         WritableStream                    WritableStreamDefaultController   WritableStreamDefaultWriter       _
_error                            assert                            async_hooks                       atob                              btoa
buffer                            child_process                     clearImmediate                    clearInterval                     clearTimeout
cluster                           console                           constants                         crypto                            decodeURI
decodeURIComponent                dgram                             diagnostics_channel               dns                               domain
encodeURI                         encodeURIComponent                escape                            eval                              events
fetch                             fs                                global                            globalThis                        http
http2                             https                             inspector                         isFinite                          isNaN
module                            navigator                         net                               os                                parseFloat
parseInt                          path                              perf_hooks                        performance                       process
punycode                          querystring                       queueMicrotask                    readline                          repl
require                           setImmediate                      setInterval                       setTimeout                        stream
string_decoder                    structuredClone                   sys                               timers                            tls
trace_events                      tty                               undefined                         unescape                          url
util                              v8                                vm                                wasi                              worker_threads
zlib

__proto__                         hasOwnProperty                    isPrototypeOf                     propertyIsEnumerable              toLocaleString
toString                          valueOf

constructor

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

PS C:\Source\Repos\complete-node-bootcamp-master> node
Welcome to Node.js v22.3.0.
Type ".help" for more information.
> String.
String.__proto__             String.hasOwnProperty        String.isPrototypeOf         String.propertyIsEnumerable  String.toLocaleString        String.valueOf

String.apply                 String.arguments             String.bind                  String.call                  String.caller                String.constructor
String.toString

String.fromCharCode          String.fromCodePoint         String.length                String.name                  String.prototype             String.raw

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

> Number.
Number.__proto__             Number.hasOwnProperty        Number.isPrototypeOf         Number.propertyIsEnumerable  Number.toLocaleString        Number.valueOf

Number.apply                 Number.arguments             Number.bind                  Number.call                  Number.caller                Number.constructor
Number.toString

Number.EPSILON               Number.MAX_SAFE_INTEGER      Number.MAX_VALUE             Number.MIN_SAFE_INTEGER      Number.MIN_VALUE             Number.NEGATIVE_INFINITY
Number.NaN                   Number.POSITIVE_INFINITY     Number.isFinite              Number.isInteger             Number.isNaN                 Number.isSafeInteger
Number.length                Number.name                  Number.parseFloat            Number.parseInt              Number.prototype

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

> Object.
Object.__proto__                  Object.hasOwnProperty             Object.isPrototypeOf              Object.propertyIsEnumerable       Object.toLocaleString
Object.valueOf

Object.apply                      Object.arguments                  Object.bind                       Object.call                       Object.caller
Object.constructor                Object.toString

Object.assign                     Object.create                     Object.defineProperties           Object.defineProperty             Object.entries
Object.freeze                     Object.fromEntries                Object.getOwnPropertyDescriptor   Object.getOwnPropertyDescriptors  Object.getOwnPropertyNames
Object.getOwnPropertySymbols      Object.getPrototypeOf             Object.groupBy                    Object.hasOwn                     Object.is
Object.isExtensible               Object.isFrozen                   Object.isSealed                   Object.keys                       Object.length
Object.name                       Object.preventExtensions          Object.prototype                  Object.seal                       Object.setPrototypeOf
Object.values

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

> Array.
Array.__proto__             Array.hasOwnProperty        Array.isPrototypeOf         Array.propertyIsEnumerable  Array.toLocaleString        Array.valueOf

Array.apply                 Array.arguments             Array.bind                  Array.call                  Array.caller                Array.constructor
Array.toString

Array.from                  Array.fromAsync             Array.isArray               Array.length                Array.name                  Array.of
Array.prototype

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

> Boolean.
Boolean.__proto__             Boolean.hasOwnProperty        Boolean.isPrototypeOf         Boolean.propertyIsEnumerable  Boolean.toLocaleString        Boolean.valueOf

Boolean.apply                 Boolean.arguments             Boolean.bind                  Boolean.call                  Boolean.caller                Boolean.constructor
Boolean.toString

Boolean.length                Boolean.name                  Boolean.prototype

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

> Function.
Function.__proto__             Function.hasOwnProperty        Function.isPrototypeOf         Function.propertyIsEnumerable  Function.toLocaleString
Function.valueOf

Function.apply                 Function.arguments             Function.bind                  Function.call                  Function.caller
Function.constructor           Function.toString

Function.length                Function.name                  Function.prototype

> Function.
